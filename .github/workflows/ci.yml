name: Zephyr CI
on:
  push:
  pull_request:

env:
  ZEPHYR_VERSION: v4.2.0
  ZSDK_VER: 0.16.8

jobs:
  build-test-and-coverage:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - board: qemu_x86
            toolchain: zephyr
            do_coverage: false
          - board: native_sim
            toolchain: host
            do_coverage: true

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # ⬅️ Remove git 128 warnings everywhere in this job
      - name: Make git trust this workspace
        run: |
          git config --global --add safe.directory '*'

      - name: Install base deps (apt)
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            git cmake ninja-build ccache gperf dfu-util device-tree-compiler \
            wget python3-pip python3-setuptools python3-wheel xz-utils file make \
            gcc g++ libsdl2-dev lcov gcc-multilib g++-multilib

      - name: Install west
        run: |
          python3 -m pip install --upgrade pip
          pip3 install west

      - name: Initialize Zephyr workspace
        working-directory: ${{ github.workspace }}
        run: |
          mkdir -p zephyrproject
          west init -m https://github.com/zephyrproject-rtos/zephyr --mr "$ZEPHYR_VERSION" zephyrproject

      - name: Update Zephyr modules
        working-directory: ${{ github.workspace }}/zephyrproject
        run: |
          west update
          west zephyr-export
          pip3 install -r zephyr/scripts/requirements.txt

      # Toolchain selection per matrix
      - name: Use Zephyr SDK toolchain
        if: matrix.toolchain == 'zephyr'
        run: |
          cd "$HOME"
          wget -q https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v${ZSDK_VER}/zephyr-sdk-${ZSDK_VER}_linux-x86_64.tar.xz
          tar -xJf zephyr-sdk-${ZSDK_VER}_linux-x86_64.tar.xz
          "${HOME}/zephyr-sdk-${ZSDK_VER}/setup.sh" -t all -h -c
          echo "ZEPHYR_TOOLCHAIN_VARIANT=zephyr" >> "$GITHUB_ENV"
          echo "ZEPHYR_SDK_INSTALL_DIR=${HOME}/zephyr-sdk-${ZSDK_VER}" >> "$GITHUB_ENV"

      - name: Use host toolchain (for native_sim)
        if: matrix.toolchain == 'host'
        run: echo "ZEPHYR_TOOLCHAIN_VARIANT=host" >> "$GITHUB_ENV"

      - name: Sanity check west workspace
        working-directory: ${{ github.workspace }}/zephyrproject
        run: |
          west topdir
          west --version

      - name: Build app
        working-directory: ${{ github.workspace }}/zephyrproject
        run: |
          west build -b "${{ matrix.board }}" \
            -s "$GITHUB_WORKSPACE/apps/secure_counter" \
            -d "$GITHUB_WORKSPACE/build/${{ matrix.board }}"

      - name: Smoke run (short)
        working-directory: ${{ github.workspace }}/zephyrproject
        run: |
          timeout 8s ninja -C "$GITHUB_WORKSPACE/build/${{ matrix.board }}" run || true

      - name: Run Twister (qemu_x86 only)
        if: matrix.board == 'qemu_x86'
        working-directory: ${{ github.workspace }}/zephyrproject/zephyr
        run: |
          ./scripts/twister -T "$GITHUB_WORKSPACE/apps/secure_counter/tests" \
            -p qemu_x86 --jobs 2 -v

      - name: Coverage (native_sim only)
        if: matrix.do_coverage
        working-directory: ${{ github.workspace }}/zephyrproject
        shell: bash
        run: |
          set -euo pipefail
          APP_DIR="$GITHUB_WORKSPACE/apps/secure_counter"
          BUILD_DIR="$GITHUB_WORKSPACE/build/secure_counter_cov"

          # Build with coverage overlay
          west build -b native_sim \
            -s "$APP_DIR" \
            -d "$BUILD_DIR" \
            -- -DOVERLAY_CONFIG="$APP_DIR/overlay-coverage.conf"

          # Run briefly to generate .gcda files (timeout is OK)
          timeout 8s ninja -C "$BUILD_DIR" run || true

          # 1) Capture everything
          lcov --capture \
               --directory "$BUILD_DIR/zephyr" \
               --output-file "$GITHUB_WORKSPACE/coverage.full.info"

          echo "== A few SF entries from coverage.full.info =="
          grep '^SF:' "$GITHUB_WORKSPACE/coverage.full.info" | head -n 30 || true

          # 2) Try several patterns to isolate just the app files
          #    (Zephyr sometimes rewrites paths; we handle common variants)
          lcov --extract "$GITHUB_WORKSPACE/coverage.full.info" \
               "$APP_DIR/*" "*/apps/secure_counter/*" "*CMAKE_SOURCE_DIR/*" \
               -o "$GITHUB_WORKSPACE/coverage.app.info" || true

          # 3) If still empty, rewrite placeholder prefixes and try again
          if ! grep -q '^SF:' "$GITHUB_WORKSPACE/coverage.app.info"; then
            sed -E "s#CMAKE_SOURCE_DIR#${APP_DIR}#g; s#WEST_TOPDIR/[^/]*/apps/secure_counter#${APP_DIR}#g" \
              "$GITHUB_WORKSPACE/coverage.full.info" > "$GITHUB_WORKSPACE/coverage.rewritten.info"

            lcov --extract "$GITHUB_WORKSPACE/coverage.rewritten.info" \
                 "$APP_DIR/*" "*/apps/secure_counter/*" \
                 -o "$GITHUB_WORKSPACE/coverage.app.info" || true
          fi

          # 4) Generate HTML – app-only if we have it, otherwise full report
          if grep -q '^SF:' "$GITHUB_WORKSPACE/coverage.app.info"; then
            echo "Generating APP-ONLY coverage HTML"
            genhtml "$GITHUB_WORKSPACE/coverage.app.info" \
              --output-directory "$GITHUB_WORKSPACE/coverage-report" \
              --title "Secure Counter (app-only)"
          else
            echo "No app files matched; generating FULL coverage HTML"
            genhtml "$GITHUB_WORKSPACE/coverage.full.info" \
              --output-directory "$GITHUB_WORKSPACE/coverage-report" \
              --title "Secure Counter (full)"
          fi

      - name: Upload coverage HTML
        if: matrix.do_coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: coverage-report
          if-no-files-found: warn

      - name: Upload lcov files
        if: matrix.do_coverage
        uses: actions/upload-artifact@v4
        with:
          name: lcov-files
          path: |
            coverage.full.info
            coverage.app.info
            coverage.rewritten.info
          if-no-files-found: warn

      - name: Upload Twister report
        if: matrix.board == 'qemu_x86'
        uses: actions/upload-artifact@v4
        with:
          name: twister-out
          path: zephyrproject/zephyr/twister-out
          if-no-files-found: warn
